package com.aurionpro.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Account {
    private long accountNumber;
    private String name;
    private double balance;
    private List<INotifier> notifiers;
    private static Scanner scanner = new Scanner(System.in);

    public Account(long accountNumber, String name, double balance, List<INotifier> notifiers) {
        this.accountNumber = accountNumber;
        this.name = name;
        this.balance = balance;
        this.notifiers = notifiers != null ? notifiers : new ArrayList<>();
    }

    public long getAccountNumber() {
        return accountNumber;
    }

    public void setAccountNumber(long accountNumber) {
        this.accountNumber = accountNumber;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getBalance() {
        return balance;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public List<INotifier> getNotifiers() {
        return notifiers;
    }

    public void setNotifiers(List<INotifier> notifiers) {
        this.notifiers = notifiers;
    }

    public void deposit(long depositAmount) {
        if (depositAmount > 0) {
            balance += depositAmount;
            System.out.println("The deposited amount is: " + depositAmount);
           
        } else {
            System.out.println("Enter a valid amount");
        }
    }

    public void withdraw(long withdrawAmount) {
        if (withdrawAmount > 0 && withdrawAmount <= balance) {
            balance -= withdrawAmount;
            System.out.println("The amount has been withdrawn. New balance: " + balance);
        } else {
            try {
                throw new InsufficientBalanceException();
            } catch (InsufficientBalanceException e) {
                e.printStackTrace();
            }
        }
    }

    public void registerNotifier(INotifier notifier) {
        notifiers.add(notifier);
    }

    private void notifyAllNotifiers(int amount) {
        for (INotifier notifier : notifiers) {
            notifier.notify(amount);
        }
    }
}
