package com.aurionpro.processing.dataimport.config;

import org.springframework.batch.item.file.FlatFileItemReader;
import org.springframework.batch.item.file.LineMapper;
import org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;
import org.springframework.batch.item.file.mapping.DefaultLineMapper;
import org.springframework.batch.item.file.transform.DelimitedLineTokenizer;
import org.springframework.context.annotation.Bean;
import org.springframework.core.io.ClassPathResource;

import com.aurionpro.processing.entity.Employee;

public class EmployeeBatchConfig {
	
	public FlatFileItemReader<Employee> readEmployeeCsv(){
		FlatFileItemReader<Employee> employeeCsvReader=new FlatFileItemReader();
		employeeCsvReader.setResource(new ClassPathResource("data.csv"));
		employeeCsvReader.setName("employeeCsvReader");
		employeeCsvReader.setLinesToSkip(1);
		employeeCsvReader.setLineMapper(lineMapper());
		return employeeCsvReader;
	}

	private LineMapper<Employee> lineMapper() {
		// TODO Auto-generated method stub
		DefaultLineMapper<Employee> lineMapper=new DefaultLineMapper<>();
		DelimitedLineTokenizer lineTokenizer=new DelimitedLineTokenizer();
		
		lineTokenizer.setDelimiter(",");
		lineTokenizer.setStrict(false);
		lineTokenizer.setNames("employeeId","name","salary");
		
		BeanWrapperFieldSetMapper<Employee> fieldSetMapper= new BeanWrapperFieldSetMapper<>();
		
		fieldSetMapper.setTargetType(Employee.class);
		
		lineMapper.setLineTokenizer(lineTokenizer);
		lineMapper.setFieldSetMapper(fieldSetMapper);
		
		return lineMapper;
		 
	}
	
	
	
	//file source
	//set name
	//set lines to skip
	//linemapper>reading line by line>mapping csv file headers > employee class

	
	@Bean
	public EmployeeProcessor employeeProcessor() {
		return new EmployeeProcessor();
	}
}
