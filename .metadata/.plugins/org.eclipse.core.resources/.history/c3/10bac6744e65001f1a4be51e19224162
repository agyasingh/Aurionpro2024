package com.aurionpro.project.services;

import com.aurionpro.project.dto.AdminDto;
import com.aurionpro.project.entities.Admin;
import com.aurionpro.project.exceptions.LoginException;
import com.aurionpro.project.repositories.AdminRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Optional;

@Service
public class AdminServiceImpl implements AdminService{

    @Autowired
    private AdminRepository adminRepository;
    

    @Autowired
    private UserRoleRepository userRoleRepository;

    public Admin assignUserToAdmin(Long adminId, Long userId, List<UserRole> roles) {
        // Fetch Admin and User
        Admin admin = adminRepository.findById(adminId)
            .orElseThrow(() -> new ValidationException("Admin not found"));

        User user = userRepository.findById(userId)
            .orElseThrow(() -> new ValidationException("User not found"));

        // Assign roles to user
        user.setRoles(roles);
        userRepository.save(user);

        // Link user to admin
        admin.setUser(user);
        return adminRepository.save(admin);
    }


    @Override
    public Admin login(AdminDto adminDto) {
        Optional<Admin> optionalAdmin = adminRepository.findByEmail(adminDto.getEmail());

        if (optionalAdmin.isEmpty()) {
            throw new LoginException("Admin with this email does not exist.");
        }

        Admin admin = optionalAdmin.get();
        // Directly compare raw passwords (not recommended for production)
        if (!adminDto.getPassword().equals(admin.getPassword())) {
            throw new LoginException("Invalid password.");
        }

        return admin;
    }
    
    @Override
    public Admin assignUserAsAdmin(User user, Admin admin) {
        // Set the user to the admin entity
        admin.setUser(user);
        
        // Optionally, set the role in the user entity (if not already set)
        user.setRole("ADMIN");
        
        // Save and return the admin entity
        return adminRepository.save(admin);
    }
}
